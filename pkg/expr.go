// This file is auto generated by tools/generate_ast.go
package gox

type Visitor interface {
	VisitBinary(Expr *Binary) interface{}
	VisitGrouping(Expr *Grouping) interface{}
	VisitLiteral(Expr *Literal) interface{}
	VisitUnary(Expr *Unary) interface{}
}

type Expr interface {
	Accept(Visitor) interface{}
}

type Binary struct {
	Left     Expr
	Operator *Token
	Right    Expr
}

func NewBinary(left Expr, operator *Token, right Expr) *Binary {
	return &Binary{
		Left:     left,
		Operator: operator,
		Right:    right,
	}
}

func (expr *Binary) Accept(visitor Visitor) interface{} {
	return visitor.VisitBinary(expr)
}

type Grouping struct {
	Expression Expr
}

func NewGrouping(expression Expr) *Grouping {
	return &Grouping{
		Expression: expression,
	}
}

func (expr *Grouping) Accept(visitor Visitor) interface{} {
	return visitor.VisitGrouping(expr)
}

type Literal struct {
	Value interface{}
}

func NewLiteral(value interface{}) *Literal {
	return &Literal{
		Value: value,
	}
}

func (expr *Literal) Accept(visitor Visitor) interface{} {
	return visitor.VisitLiteral(expr)
}

type Unary struct {
	Operator *Token
	Right    Expr
}

func NewUnary(operator *Token, right Expr) *Unary {
	return &Unary{
		Operator: operator,
		Right:    right,
	}
}

func (expr *Unary) Accept(visitor Visitor) interface{} {
	return visitor.VisitUnary(expr)
}
